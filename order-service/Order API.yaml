openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: 'https://order-service-app.herokuapp.com'
    description: Generated server url
paths:
  '/api/v1/orders/{orderUid}':
    delete:
      tags:
        - Order API
      summary: Return order
      operationId: refundOrder
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Order returned
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: External request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/api/v1/orders/{orderUid}/warranty':
    post:
      tags:
        - Order API
      summary: Warranty request
      operationId: warranty
      parameters:
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderWarrantyRequest'
        required: true
      responses:
        '200':
          description: Warranty decision
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWarrantyResponse'
        '400':
          description: Bad request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: External request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/api/v1/orders/{userUid}/{orderUid}':
    get:
      tags:
        - Order API
      summary: User order info
      operationId: userOrder
      parameters:
        - name: userUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInfoResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/api/v1/orders/{userUid}':
    get:
      tags:
        - Order API
      summary: User orders info
      operationId: userOrders
      parameters:
        - name: userUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Orders info
          content:
            application/json:
              schema:
                type: array
                properties:
                  empty:
                    type: boolean
                items:
                  $ref: '#/components/schemas/OrderInfoResponse'
    post:
      tags:
        - Order API
      summary: Create order
      operationId: makeOrder
      parameters:
        - name: userUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
        required: true
      responses:
        '200':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'
        '400':
          description: Bad request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Item not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: External request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
    OrderWarrantyRequest:
      required:
        - reason
      type: object
      properties:
        reason:
          type: string
    OrderWarrantyResponse:
      required:
        - decision
        - warrantyDate
      type: object
      properties:
        warrantyDate:
          type: string
        decision:
          type: string
    OrderInfoResponse:
      required:
        - itemUid
        - orderDate
        - orderUid
        - status
      type: object
      properties:
        orderUid:
          type: string
          format: uuid
        orderDate:
          type: string
        itemUid:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - PAID
            - CANCELED
            - WAITING
    CreateOrderRequest:
      required:
        - model
        - size
      type: object
      properties:
        model:
          type: string
        size:
          type: string
          enum:
            - S
            - M
            - L
            - XL
    CreateOrderResponse:
      required:
        - orderUid
      type: object
      properties:
        orderUid:
          type: string
          format: uuid
