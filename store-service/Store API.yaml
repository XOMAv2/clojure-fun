openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: 'https://store-service-app.herokuapp.com'
    description: Generated server url
paths:
  '/api/v1/store/{userUid}/purchase':
    post:
      tags:
        - Store API
      summary: Purchase item
      operationId: purchase
      parameters:
        - name: userUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
        required: true
      responses:
        '201':
          description: Item purchased
        '400':
          description: Bad request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Item not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: External request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/api/v1/store/{userUid}/{orderUid}/refund':
    delete:
      tags:
        - Store API
      summary: Return items
      operationId: refund
      parameters:
        - name: userUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Item returned
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: External request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/api/v1/store/{userUid}/{orderUid}/warranty':
    post:
      tags:
        - Store API
      summary: Request warranty
      operationId: warranty
      parameters:
        - name: userUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarrantyRequest'
        required: true
      responses:
        '200':
          description: Warranty decision
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarrantyResponse'
        '400':
          description: Bad request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: External request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/api/v1/store/{userUid}/orders':
    get:
      tags:
        - Store API
      summary: List user orders
      operationId: orders
      parameters:
        - name: userUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User orders info
          content:
            application/json:
              schema:
                type: array
                properties:
                  list:
                    type: array
                    writeOnly: true
                    items:
                      $ref: '#/components/schemas/UserOrderResponse'
                  empty:
                    type: boolean
                items:
                  $ref: '#/components/schemas/UserOrderResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: External request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/api/v1/store/{userUid}/{orderUid}':
    get:
      tags:
        - Store API
      summary: User order info
      operationId: orders_1
      parameters:
        - name: userUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: orderUid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User order info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrderResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: External request failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
    PurchaseRequest:
      required:
        - model
        - size
      type: object
      properties:
        model:
          type: string
        size:
          type: string
          enum:
            - S
            - M
            - L
            - XL
    WarrantyRequest:
      required:
        - reason
      type: object
      properties:
        reason:
          type: string
    WarrantyResponse:
      required:
        - decision
        - orderUid
        - warrantyDate
      type: object
      properties:
        orderUid:
          type: string
          format: uuid
        warrantyDate:
          type: string
        decision:
          type: string
    UserOrderResponse:
      required:
        - date
        - orderUid
      type: object
      properties:
        orderUid:
          type: string
          format: uuid
        date:
          type: string
        model:
          type: string
        size:
          type: string
          enum:
            - S
            - M
            - L
            - XL
        warrantyDate:
          type: string
        warrantyStatus:
          type: string
          enum:
            - ON_WARRANTY
            - USE_WARRANTY
            - REMOVED_FROM_WARRANTY
